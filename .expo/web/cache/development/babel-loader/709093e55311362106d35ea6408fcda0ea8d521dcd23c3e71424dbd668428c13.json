{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport axios from 'axios';\nimport Heading from \"../components/landing-screen/Heading\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar API_BASE_URL = 'http://localhost:3006';\nvar TipsPage = function TipsPage(_ref) {\n  var citizen = _ref.citizen;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    tipText = _useState2[0],\n    setTipText = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    tips = _useState4[0],\n    setTips = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    likes = _useState6[0],\n    setLikes = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    dislikes = _useState8[0],\n    setDislikes = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    loading = _useState10[0],\n    setLoading = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    error = _useState12[0],\n    setError = _useState12[1];\n  useEffect(function () {\n    fetchSafetyTips();\n  }, []);\n  var welcomeMessage = `Welcome ${localStorage.getItem('citizen_name')}`;\n  var fetchSafetyTips = function fetchSafetyTips() {\n    setLoading(true);\n    axios.get('http://localhost:3006/safety_tip/').then(function (response) {\n      var sortedTips = response.data.sort(function (a, b) {\n        return new Date(b.date) - new Date(a.date);\n      });\n      setTips(sortedTips);\n      setLoading(false);\n    }).catch(function (error) {\n      setError('Error fetching safety tips');\n      setLoading(false);\n      console.error('Error fetching safety tips:', error);\n    });\n  };\n  var handleAddTip = function handleAddTip() {\n    var citizen_id = localStorage.getItem('citizen_id');\n    var tip = {\n      tip_description: tipText,\n      citizen_id: Number(citizen_id)\n    };\n    if (!tipText) {\n      setError('Tip text or citizen information is missing.');\n      return;\n    }\n    setLoading(true);\n    axios.post(`${API_BASE_URL}/safety_tip`, tip, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      console.log('Tip added successfully:', response.data);\n      fetchSafetyTips();\n      setTipText('');\n      setError(null);\n    }).catch(function (error) {\n      setError('Error adding safety tip');\n      console.error('Error adding safety tip:', error);\n    }).finally(function () {\n      setLoading(false);\n    });\n  };\n  var formatDate = function formatDate(dateString) {\n    var dateObj = new Date(dateString);\n    return dateObj.toLocaleDateString();\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Heading, {}), _jsxs(Text, {\n      style: styles.welcomeMessage,\n      children: [welcomeMessage, \"!\"]\n    }), _jsx(Text, {\n      style: styles.listTitle,\n      textAlign: \"center\",\n      children: \"Alert Community\"\n    }), loading ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"black\"\n    }) : _jsx(FlatList, {\n      data: tips,\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      },\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n          index = _ref2.index;\n        return _jsx(View, {\n          children: _jsxs(View, {\n            style: styles.commentContainer,\n            children: [_jsxs(Text, {\n              style: styles.tipAndUser,\n              children: [_jsxs(Text, {\n                style: [styles.username, {\n                  textAlign: 'center'\n                }],\n                children: [item.citizen_name, \":\"]\n              }), ' ', _jsx(Text, {\n                style: styles.tip,\n                textAlign: \"center\",\n                children: item.tip_description\n              })]\n            }), _jsx(Text, {\n              style: styles.date,\n              children: formatDate(item.date)\n            })]\n          })\n        });\n      },\n      ListEmptyComponent: function ListEmptyComponent() {\n        return _jsx(Text, {\n          style: [styles.emptyList, {\n            textAlign: 'center'\n          }],\n          children: \"No tips yet\"\n        });\n      }\n    }), error && _jsx(Text, {\n      style: [styles.errorText, {\n        textAlign: 'center'\n      }],\n      children: error\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter your tip here\",\n        value: tipText,\n        onChangeText: function onChangeText(text) {\n          return setTipText(text);\n        },\n        multiline: true\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(Pressable, {\n          onPress: handleAddTip,\n          style: styles.pressableButton,\n          children: _jsx(Text, {\n            style: [styles.buttonText, {\n              color: 'white',\n              textAlign: 'center'\n            }],\n            children: \"Add Tip\"\n          })\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  likeDislikeCounts: {\n    fontSize: 14,\n    color: '#777',\n    marginLeft: 8\n  },\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: \"gray\",\n    elevation: 12\n  },\n  listTitle: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginBottom: 8,\n    textAlign: \"center\"\n  },\n  commentContainer: {\n    backgroundColor: \"#D9D9D9\",\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    flexDirection: 'row',\n    alignItems: \"center\",\n    padding: 8,\n    marginBottom: 8,\n    justifyContent: 'space-between',\n    position: 'relative',\n    borderRadius: 10,\n    overflow: 'hidden'\n  },\n  tipAndUser: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  username: {\n    fontWeight: 'bold',\n    marginRight: 8,\n    textAlign: 'center'\n  },\n  tip: {\n    fontSize: 16,\n    textAlign: \"center\"\n  },\n  emptyList: {\n    fontSize: 16,\n    color: \"#777\"\n  },\n  inputContainer: {\n    flexDirection: \"column\",\n    alignItems: \"stretch\",\n    marginTop: 16\n  },\n  input: {\n    width: 363,\n    height: 51,\n    marginBottom: 8,\n    backgroundColor: \"#D9D9D9\",\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 6,\n    textAlign: \"center\"\n  },\n  buttonContainer: {\n    width: 82,\n    height: 28,\n    backgroundColor: \"black\",\n    alignSelf: \"flex-end\",\n    borderRadius: 6\n  },\n  date: {\n    fontSize: 14,\n    color: '#777',\n    marginBottom: 8,\n    textAlign: 'right'\n  },\n  welcomeMessage: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    marginLeft: 16,\n    marginTop: 16,\n    marginBottom: 16\n  }\n});\nexport default TipsPage;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","Pressable","FlatList","StyleSheet","ActivityIndicator","TouchableOpacity","axios","Heading","FontAwesome","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","TipsPage","_ref","citizen","_useState","_useState2","_slicedToArray","tipText","setTipText","_useState3","_useState4","tips","setTips","_useState5","_useState6","likes","setLikes","_useState7","_useState8","dislikes","setDislikes","_useState9","_useState10","loading","setLoading","_useState11","_useState12","error","setError","fetchSafetyTips","welcomeMessage","localStorage","getItem","get","then","response","sortedTips","data","sort","a","b","Date","date","catch","console","handleAddTip","citizen_id","tip","tip_description","Number","post","headers","log","finally","formatDate","dateString","dateObj","toLocaleDateString","style","styles","container","children","listTitle","textAlign","size","color","keyExtractor","item","index","toString","renderItem","_ref2","commentContainer","tipAndUser","username","citizen_name","ListEmptyComponent","emptyList","errorText","inputContainer","input","placeholder","value","onChangeText","text","multiline","buttonContainer","onPress","pressableButton","buttonText","create","likeDislikeCounts","fontSize","marginLeft","flex","padding","backgroundColor","elevation","fontWeight","marginBottom","borderWidth","borderColor","flexDirection","alignItems","justifyContent","position","borderRadius","overflow","marginRight","marginTop","width","height","alignSelf"],"sources":["C:/Q-phela-UI/src/screens/TipsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  Pressable,\r\n  FlatList,\r\n  StyleSheet,\r\n  ActivityIndicator,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport axios from 'axios';\r\nimport Heading from '../components/landing-screen/Heading';\r\nimport { FontAwesome } from '@expo/vector-icons';\r\n\r\nconst API_BASE_URL = 'http://localhost:3006';\r\n\r\nconst TipsPage = ({ citizen }) => {\r\n  const [tipText, setTipText] = useState('');\r\n  const [tips, setTips] = useState([]);\r\n  const [likes, setLikes] = useState([]);\r\n  const [dislikes, setDislikes] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch safety tips when the component mounts\r\n    fetchSafetyTips();\r\n  }, []);\r\n\r\n  const welcomeMessage = `Welcome ${localStorage.getItem('citizen_name')}`;\r\n\r\n  const fetchSafetyTips = () => {\r\n    setLoading(true);\r\n    axios\r\n      .get('http://localhost:3006/safety_tip/')\r\n      .then((response) => {\r\n        // Sort the tips by date in descending order (newest first)\r\n        const sortedTips = response.data.sort(\r\n          (a, b) => new Date(b.date) - new Date(a.date)\r\n        );\r\n        setTips(sortedTips);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setError('Error fetching safety tips');\r\n        setLoading(false);\r\n        console.error('Error fetching safety tips:', error);\r\n      });\r\n  };\r\n\r\n  const handleAddTip = () => {\r\n    var citizen_id = localStorage.getItem('citizen_id');\r\n\r\n    var tip = { tip_description: tipText, citizen_id: Number(citizen_id) };\r\n\r\n    if (!tipText) {\r\n      setError('Tip text or citizen information is missing.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    axios\r\n      .post(`${API_BASE_URL}/safety_tip`, tip, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log('Tip added successfully:', response.data);\r\n        fetchSafetyTips();\r\n        setTipText('');\r\n        setError(null);\r\n      })\r\n      .catch((error) => {\r\n        setError('Error adding safety tip');\r\n        console.error('Error adding safety tip:', error);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n/*\r\n  const handleLike = (index) => {\r\n    const updatedTips = [...tips];\r\n    if (updatedTips[index].liked === true) {\r\n      updatedTips[index].liked = null; // Remove the like\r\n    } else {\r\n      updatedTips[index].liked = true; // Set to like\r\n    }\r\n    setTips(updatedTips);\r\n  };\r\n\r\n  const handleDislike = (index) => {\r\n    const updatedTips = [...tips];\r\n    if (updatedTips[index].liked === false) {\r\n      updatedTips[index].liked = null; // Remove the dislike\r\n    } else {\r\n      updatedTips[index].liked = false; // Set to dislike\r\n    }\r\n    setTips(updatedTips);\r\n  };\r\n\r\n  const renderLikeDislikeButtons = (index, liked) => {\r\n    if (liked === true) {\r\n      return (\r\n        <View style={styles.thumbsContainer}>\r\n          <TouchableOpacity onPress={() => handleLike(index)}>\r\n            <FontAwesome name=\"thumbs-up\" size={24} color=\"blue\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    } else if (liked === false) {\r\n      return (\r\n        <View style={styles.thumbsContainer}>\r\n          <TouchableOpacity onPress={() => handleDislike(index)}>\r\n            <FontAwesome name=\"thumbs-down\" size={24} color=\"red\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n        <View style={styles.thumbsContainer}>\r\n          <TouchableOpacity onPress={() => handleLike(index)}>\r\n            <FontAwesome name=\"thumbs-up\" size={24} color=\"black\" />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => handleDislike(index)}>\r\n            <FontAwesome name=\"thumbs-down\" size={24} color=\"black\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n  };*/\r\n\r\n  const formatDate = (dateString) => {\r\n    const dateObj = new Date(dateString);\r\n    return dateObj.toLocaleDateString(); // Formats the date as per locale\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Heading />\r\n      <Text style={styles.welcomeMessage}>{welcomeMessage}!</Text>\r\n\r\n      <Text style={styles.listTitle} textAlign=\"center\">\r\n        Alert Community\r\n      </Text>\r\n      {loading ? (\r\n        <ActivityIndicator size=\"large\" color=\"black\" />\r\n      ) : (\r\n        <FlatList\r\n          data={tips}\r\n          keyExtractor={(item, index) => index.toString()}\r\n          renderItem={({ item, index }) => (\r\n            <View>\r\n              <View style={styles.commentContainer}>\r\n                <Text style={styles.tipAndUser}>\r\n                  <Text style={[styles.username, { textAlign: 'center' }]}>\r\n                    {item.citizen_name}:\r\n                  </Text>{' '}\r\n                  <Text style={styles.tip} textAlign=\"center\">\r\n                    {item.tip_description}\r\n                  </Text>\r\n                </Text>\r\n                {/* <View style={styles.thumbsContainer}>\r\n                  {renderLikeDislikeButtons(index, item.liked)}\r\n                  <Text style={styles.likeDislikeCounts}>\r\n                    Likes: {item.likes} Dislikes: {item.dislikes}\r\n                  </Text>\r\n                </View> */}\r\n                <Text style={styles.date}>{formatDate(item.date)}</Text>\r\n              </View>\r\n            </View>\r\n          )}\r\n          ListEmptyComponent={() => (\r\n            <Text style={[styles.emptyList, { textAlign: 'center' }]}>\r\n              No tips yet\r\n            </Text>\r\n          )}\r\n        />\r\n      )}\r\n\r\n      {error && (\r\n        <Text style={[styles.errorText, { textAlign: 'center' }]}>{error}</Text>\r\n      )}\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Enter your tip here\"\r\n          value={tipText}\r\n          onChangeText={(text) => setTipText(text)}\r\n          multiline\r\n        />\r\n        <View style={styles.buttonContainer}>\r\n          <Pressable onPress={handleAddTip} style={styles.pressableButton}>\r\n            <Text style={[styles.buttonText, { color: 'white', textAlign: 'center' }]}>\r\n              Add Tip\r\n            </Text>\r\n          </Pressable>\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  // ... (previous styles)\r\n\r\n  likeDislikeCounts: {\r\n    fontSize: 14,\r\n    color: '#777',\r\n    marginLeft: 8,\r\n  },\r\n\r\n\r\n\r\n\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    backgroundColor: \"gray\",\r\n    elevation: 12,\r\n  },\r\n  listTitle: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 8,\r\n    textAlign: \"center\", // Center-align the text\r\n  },\r\n  commentContainer: {\r\n    backgroundColor: \"#D9D9D9\",\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    flexDirection: 'row',\r\n    alignItems: \"center\",\r\n    padding: 8,\r\n    marginBottom: 8,\r\n    justifyContent: 'space-between',\r\n    position: 'relative',\r\n    borderRadius: 10,\r\n    overflow: 'hidden',\r\n  },\r\n  tipAndUser: {\r\n    flex: 1, // Allow the text to take up all available space\r\n    alignItems: \"center\",\r\n  },\r\n  /*thumbsContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    marginTop: 8,\r\n  },\r\n  thumbsIcon: {\r\n    marginBottom: 8, // Adjust the spacing between thumbs\r\n  },*/\r\n  username: {\r\n    fontWeight: 'bold',\r\n    marginRight: 8,\r\n    textAlign: 'center',\r\n  },\r\n  tip: {\r\n    fontSize: 16,\r\n    textAlign: \"center\",\r\n  },\r\n  emptyList: {\r\n    fontSize: 16,\r\n    color: \"#777\",\r\n  },\r\n  inputContainer: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"stretch\",\r\n    marginTop: 16,\r\n  },\r\n  input: {\r\n    width: 363,\r\n    height: 51,\r\n    marginBottom: 8,\r\n    backgroundColor: \"#D9D9D9\",\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    borderRadius: 6,\r\n    //padding: 8,\r\n    textAlign: \"center\",\r\n  },\r\n  buttonContainer: {\r\n    width: 82,\r\n    height: 28,\r\n    backgroundColor: \"black\",\r\n    alignSelf: \"flex-end\",\r\n    borderRadius: 6,\r\n  },\r\n  date: {\r\n    fontSize: 14,\r\n    color: '#777',\r\n    marginBottom: 8, // Add margin at the bottom to create space for the date\r\n    textAlign: 'right', // Align the date to the right\r\n  },\r\n  welcomeMessage: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    textAlign: 'left',\r\n    marginLeft: 16,\r\n    marginTop: 16,\r\n    marginBottom: 16,\r\n  },\r\n /*thumbsIcon: {\r\n    marginRight: 8, // Adjust the spacing\r\n  },*/\r\n});\r\n\r\nexport default TipsPage;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,gBAAA;AAWnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO;AACd,SAASC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjD,IAAMC,YAAY,GAAG,uBAAuB;AAE5C,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAAoB;EAAA,IAAdC,OAAO,GAAAD,IAAA,CAAPC,OAAO;EACzB,IAAAC,SAAA,GAA8BrB,QAAQ,CAAC,EAAE,CAAC;IAAAsB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAAwB1B,QAAQ,CAAC,EAAE,CAAC;IAAA2B,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7BE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EACpB,IAAAG,UAAA,GAA0B9B,QAAQ,CAAC,EAAE,CAAC;IAAA+B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAAgClC,QAAQ,CAAC,EAAE,CAAC;IAAAmC,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAA8BtC,QAAQ,CAAC,KAAK,CAAC;IAAAuC,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAAtCE,OAAO,GAAAD,WAAA;IAAEE,UAAU,GAAAF,WAAA;EAC1B,IAAAG,WAAA,GAA0B1C,QAAQ,CAAC,IAAI,CAAC;IAAA2C,WAAA,GAAApB,cAAA,CAAAmB,WAAA;IAAjCE,KAAK,GAAAD,WAAA;IAAEE,QAAQ,GAAAF,WAAA;EAEtB1C,SAAS,CAAC,YAAM;IAEd6C,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,cAAc,GAAI,WAAUC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAE,EAAC;EAExE,IAAMH,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5BL,UAAU,CAAC,IAAI,CAAC;IAChB/B,KAAK,CACFwC,GAAG,CAAC,mCAAmC,CAAC,CACxCC,IAAI,CAAC,UAACC,QAAQ,EAAK;MAElB,IAAMC,UAAU,GAAGD,QAAQ,CAACE,IAAI,CAACC,IAAI,CACnC,UAACC,CAAC,EAAEC,CAAC;QAAA,OAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,IAAI,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,IAAI,CAAC;MAAA,CAC/C,CAAC;MACD9B,OAAO,CAACwB,UAAU,CAAC;MACnBZ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDmB,KAAK,CAAC,UAAChB,KAAK,EAAK;MAChBC,QAAQ,CAAC,4BAA4B,CAAC;MACtCJ,UAAU,CAAC,KAAK,CAAC;MACjBoB,OAAO,CAACjB,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,CAAC;EACN,CAAC;EAED,IAAMkB,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,IAAIC,UAAU,GAAGf,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAEnD,IAAIe,GAAG,GAAG;MAAEC,eAAe,EAAEzC,OAAO;MAAEuC,UAAU,EAAEG,MAAM,CAACH,UAAU;IAAE,CAAC;IAEtE,IAAI,CAACvC,OAAO,EAAE;MACZqB,QAAQ,CAAC,6CAA6C,CAAC;MACvD;IACF;IAEAJ,UAAU,CAAC,IAAI,CAAC;IAChB/B,KAAK,CACFyD,IAAI,CAAE,GAAElD,YAAa,aAAY,EAAE+C,GAAG,EAAE;MACvCI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACDjB,IAAI,CAAC,UAACC,QAAQ,EAAK;MAClBS,OAAO,CAACQ,GAAG,CAAC,yBAAyB,EAAEjB,QAAQ,CAACE,IAAI,CAAC;MACrDR,eAAe,CAAC,CAAC;MACjBrB,UAAU,CAAC,EAAE,CAAC;MACdoB,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,CACDe,KAAK,CAAC,UAAChB,KAAK,EAAK;MAChBC,QAAQ,CAAC,yBAAyB,CAAC;MACnCgB,OAAO,CAACjB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC,CACD0B,OAAO,CAAC,YAAM;MACb7B,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC;EAqDD,IAAM8B,UAAU,GAAG,SAAbA,UAAUA,CAAIC,UAAU,EAAK;IACjC,IAAMC,OAAO,GAAG,IAAIf,IAAI,CAACc,UAAU,CAAC;IACpC,OAAOC,OAAO,CAACC,kBAAkB,CAAC,CAAC;EACrC,CAAC;EAED,OACE1D,KAAA,CAACd,IAAI;IAACyE,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BhE,IAAA,CAACH,OAAO,IAAE,CAAC,EACXK,KAAA,CAACb,IAAI;MAACwE,KAAK,EAAEC,MAAM,CAAC7B,cAAe;MAAA+B,QAAA,GAAE/B,cAAc,EAAC,GAAC;IAAA,CAAM,CAAC,EAE5DjC,IAAA,CAACX,IAAI;MAACwE,KAAK,EAAEC,MAAM,CAACG,SAAU;MAACC,SAAS,EAAC,QAAQ;MAAAF,QAAA,EAAC;IAElD,CAAM,CAAC,EACNtC,OAAO,GACN1B,IAAA,CAACN,iBAAiB;MAACyE,IAAI,EAAC,OAAO;MAACC,KAAK,EAAC;IAAO,CAAE,CAAC,GAEhDpE,IAAA,CAACR,QAAQ;MACPgD,IAAI,EAAE1B,IAAK;MACXuD,YAAY,EAAE,SAAAA,aAACC,IAAI,EAAEC,KAAK;QAAA,OAAKA,KAAK,CAACC,QAAQ,CAAC,CAAC;MAAA,CAAC;MAChDC,UAAU,EAAE,SAAAA,WAAAC,KAAA;QAAA,IAAGJ,IAAI,GAAAI,KAAA,CAAJJ,IAAI;UAAEC,KAAK,GAAAG,KAAA,CAALH,KAAK;QAAA,OACxBvE,IAAA,CAACZ,IAAI;UAAA4E,QAAA,EACH9D,KAAA,CAACd,IAAI;YAACyE,KAAK,EAAEC,MAAM,CAACa,gBAAiB;YAAAX,QAAA,GACnC9D,KAAA,CAACb,IAAI;cAACwE,KAAK,EAAEC,MAAM,CAACc,UAAW;cAAAZ,QAAA,GAC7B9D,KAAA,CAACb,IAAI;gBAACwE,KAAK,EAAE,CAACC,MAAM,CAACe,QAAQ,EAAE;kBAAEX,SAAS,EAAE;gBAAS,CAAC,CAAE;gBAAAF,QAAA,GACrDM,IAAI,CAACQ,YAAY,EAAC,GACrB;cAAA,CAAM,CAAC,EAAC,GAAG,EACX9E,IAAA,CAACX,IAAI;gBAACwE,KAAK,EAAEC,MAAM,CAACZ,GAAI;gBAACgB,SAAS,EAAC,QAAQ;gBAAAF,QAAA,EACxCM,IAAI,CAACnB;cAAe,CACjB,CAAC;YAAA,CACH,CAAC,EAOPnD,IAAA,CAACX,IAAI;cAACwE,KAAK,EAAEC,MAAM,CAACjB,IAAK;cAAAmB,QAAA,EAAEP,UAAU,CAACa,IAAI,CAACzB,IAAI;YAAC,CAAO,CAAC;UAAA,CACpD;QAAC,CACH,CAAC;MAAA,CACP;MACFkC,kBAAkB,EAAE,SAAAA,mBAAA;QAAA,OAClB/E,IAAA,CAACX,IAAI;UAACwE,KAAK,EAAE,CAACC,MAAM,CAACkB,SAAS,EAAE;YAAEd,SAAS,EAAE;UAAS,CAAC,CAAE;UAAAF,QAAA,EAAC;QAE1D,CAAM,CAAC;MAAA;IACP,CACH,CACF,EAEAlC,KAAK,IACJ9B,IAAA,CAACX,IAAI;MAACwE,KAAK,EAAE,CAACC,MAAM,CAACmB,SAAS,EAAE;QAAEf,SAAS,EAAE;MAAS,CAAC,CAAE;MAAAF,QAAA,EAAElC;IAAK,CAAO,CACxE,EACD5B,KAAA,CAACd,IAAI;MAACyE,KAAK,EAAEC,MAAM,CAACoB,cAAe;MAAAlB,QAAA,GACjChE,IAAA,CAACV,SAAS;QACRuE,KAAK,EAAEC,MAAM,CAACqB,KAAM;QACpBC,WAAW,EAAC,qBAAqB;QACjCC,KAAK,EAAE3E,OAAQ;QACf4E,YAAY,EAAE,SAAAA,aAACC,IAAI;UAAA,OAAK5E,UAAU,CAAC4E,IAAI,CAAC;QAAA,CAAC;QACzCC,SAAS;MAAA,CACV,CAAC,EACFxF,IAAA,CAACZ,IAAI;QAACyE,KAAK,EAAEC,MAAM,CAAC2B,eAAgB;QAAAzB,QAAA,EAClChE,IAAA,CAACT,SAAS;UAACmG,OAAO,EAAE1C,YAAa;UAACa,KAAK,EAAEC,MAAM,CAAC6B,eAAgB;UAAA3B,QAAA,EAC9DhE,IAAA,CAACX,IAAI;YAACwE,KAAK,EAAE,CAACC,MAAM,CAAC8B,UAAU,EAAE;cAAExB,KAAK,EAAE,OAAO;cAAEF,SAAS,EAAE;YAAS,CAAC,CAAE;YAAAF,QAAA,EAAC;UAE3E,CAAM;QAAC,CACE;MAAC,CACR,CAAC;IAAA,CACH,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGrE,UAAU,CAACoG,MAAM,CAAC;EAG/BC,iBAAiB,EAAE;IACjBC,QAAQ,EAAE,EAAE;IACZ3B,KAAK,EAAE,MAAM;IACb4B,UAAU,EAAE;EACd,CAAC;EAKDjC,SAAS,EAAE;IACTkC,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,eAAe,EAAE,MAAM;IACvBC,SAAS,EAAE;EACb,CAAC;EACDnC,SAAS,EAAE;IACT8B,QAAQ,EAAE,EAAE;IACZM,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE,CAAC;IACfpC,SAAS,EAAE;EACb,CAAC;EACDS,gBAAgB,EAAE;IAChBwB,eAAe,EAAE,SAAS;IAC1BI,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBR,OAAO,EAAE,CAAC;IACVI,YAAY,EAAE,CAAC;IACfK,cAAc,EAAE,eAAe;IAC/BC,QAAQ,EAAE,UAAU;IACpBC,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE;EACZ,CAAC;EACDlC,UAAU,EAAE;IACVqB,IAAI,EAAE,CAAC;IACPS,UAAU,EAAE;EACd,CAAC;EAUD7B,QAAQ,EAAE;IACRwB,UAAU,EAAE,MAAM;IAClBU,WAAW,EAAE,CAAC;IACd7C,SAAS,EAAE;EACb,CAAC;EACDhB,GAAG,EAAE;IACH6C,QAAQ,EAAE,EAAE;IACZ7B,SAAS,EAAE;EACb,CAAC;EACDc,SAAS,EAAE;IACTe,QAAQ,EAAE,EAAE;IACZ3B,KAAK,EAAE;EACT,CAAC;EACDc,cAAc,EAAE;IACduB,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE,SAAS;IACrBM,SAAS,EAAE;EACb,CAAC;EACD7B,KAAK,EAAE;IACL8B,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,EAAE;IACVZ,YAAY,EAAE,CAAC;IACfH,eAAe,EAAE,SAAS;IAC1BI,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBK,YAAY,EAAE,CAAC;IAEf3C,SAAS,EAAE;EACb,CAAC;EACDuB,eAAe,EAAE;IACfwB,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVf,eAAe,EAAE,OAAO;IACxBgB,SAAS,EAAE,UAAU;IACrBN,YAAY,EAAE;EAChB,CAAC;EACDhE,IAAI,EAAE;IACJkD,QAAQ,EAAE,EAAE;IACZ3B,KAAK,EAAE,MAAM;IACbkC,YAAY,EAAE,CAAC;IACfpC,SAAS,EAAE;EACb,CAAC;EACDjC,cAAc,EAAE;IACd8D,QAAQ,EAAE,EAAE;IACZM,UAAU,EAAE,MAAM;IAClBnC,SAAS,EAAE,MAAM;IACjB8B,UAAU,EAAE,EAAE;IACdgB,SAAS,EAAE,EAAE;IACbV,YAAY,EAAE;EAChB;AAIF,CAAC,CAAC;AAEF,eAAelG,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}