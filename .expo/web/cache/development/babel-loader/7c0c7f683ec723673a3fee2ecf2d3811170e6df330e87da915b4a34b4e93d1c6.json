{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { Colors } from \"../assets/Colors\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport LocationSvg from \"../assets/svg/LocationSvg\";\nimport RoundedButton from \"../components/global/RoundedButton\";\nimport axios from 'axios';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RegisterScreen = function RegisterScreen() {\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    citizenName = _useState2[0],\n    setCitizenName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    contactNumber = _useState6[0],\n    setContactNumber = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    password = _useState8[0],\n    setPassword = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    confirmPassword = _useState10[0],\n    setConfirmPassword = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    passwordVisible = _useState12[0],\n    setPasswordVisible = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    confirmPasswordVisible = _useState14[0],\n    setConfirmPasswordVisible = _useState14[1];\n  var _useState15 = useState(''),\n    _useState16 = _slicedToArray(_useState15, 2),\n    error = _useState16[0],\n    setError = _useState16[1];\n  var registerFun = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        if (password !== confirmPassword) {\n          setError('Passwords do not match.');\n          return;\n        }\n        var data = {\n          citizen_name: citizenName,\n          email: email,\n          password: password,\n          contact_number: contactNumber\n        };\n        var response = yield axios.post('http://localhost:3002/register', data);\n        if (response.data.success) {\n          navigation.navigate('Login');\n        } else {\n          if (response.data.message === 'User with this email already exists') {\n            setError('User with this email already exists.');\n          } else {\n            setError('Registration failed. Please check your input and try again.');\n          }\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        setError('Registration failed. Please check your input and try again.');\n      }\n    });\n    return function registerFun() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(SafeAreaView, {\n    style: styles.root,\n    children: [_jsxs(View, {\n      style: styles.svgtext,\n      children: [_jsx(LocationSvg, {}), _jsx(Text, {\n        style: styles.headerText,\n        children: \"Register your account\"\n      })]\n    }), _jsxs(View, {\n      style: styles.fields,\n      children: [_jsxs(View, {\n        style: sty,\n        children: [_jsx(TextInput, {\n          placeholder: \"Username\",\n          onChangeText: setCitizenName\n        }), _jsx(TextInput, {\n          placeholder: \"Email *\",\n          onChangeText: setEmail\n        })]\n      }), _jsx(TextInput, {\n        placeholder: \"Contact Number\",\n        onChangeText: setContactNumber,\n        style: styles.contactInput\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(TextInput, {\n          placeholder: \"Password *\",\n          secureTextEntry: !passwordVisible,\n          onChangeText: setPassword,\n          style: styles.input\n        }), _jsx(FontAwesome, {\n          name: passwordVisible ? \"eye\" : \"eye-slash\",\n          size: 24,\n          color: Colors.black,\n          style: styles.icon,\n          onPress: function onPress() {\n            return setPasswordVisible(!passwordVisible);\n          }\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(TextInput, {\n          placeholder: \"Confirm Password *\",\n          secureTextEntry: !confirmPasswordVisible,\n          onChangeText: setConfirmPassword,\n          style: styles.input\n        }), _jsx(FontAwesome, {\n          name: confirmPasswordVisible ? \"eye\" : \"eye-slash\",\n          size: 24,\n          color: Colors.black,\n          style: styles.icon,\n          onPress: function onPress() {\n            return setConfirmPasswordVisible(!confirmPasswordVisible);\n          }\n        })]\n      }), _jsx(RoundedButton, {\n        title: \"Register\",\n        btnColor: Colors.black,\n        onPressedFun: registerFun\n      }), error && _jsx(Text, {\n        style: styles.errorText,\n        children: error\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"gray\"\n  },\n  svgtext: {\n    gap: 31,\n    alignItems: \"center\",\n    marginBottom: 30\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: \"700\"\n  },\n  fields: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    gap: 20\n  },\n  contactInput: {\n    marginTop: 5,\n    backgroundColor: \"#d3d3d3\"\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderColor: \"blue\",\n    marginLeft: 37\n  },\n  input: {\n    flex: 1,\n    backgroundColor: \"#d3d3d3\"\n  },\n  icon: {\n    padding: 5\n  },\n  errorText: {\n    color: \"red\",\n    marginTop: 10\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"names":["React","useState","Colors","Text","SafeAreaView","StyleSheet","View","TextInput","LocationSvg","RoundedButton","axios","useNavigation","FontAwesome","jsx","_jsx","jsxs","_jsxs","RegisterScreen","navigation","_useState","_useState2","_slicedToArray","citizenName","setCitizenName","_useState3","_useState4","email","setEmail","_useState5","_useState6","contactNumber","setContactNumber","_useState7","_useState8","password","setPassword","_useState9","_useState10","confirmPassword","setConfirmPassword","_useState11","_useState12","passwordVisible","setPasswordVisible","_useState13","_useState14","confirmPasswordVisible","setConfirmPasswordVisible","_useState15","_useState16","error","setError","registerFun","_ref","_asyncToGenerator","data","citizen_name","contact_number","response","post","success","navigate","message","console","apply","arguments","style","styles","root","children","svgtext","headerText","fields","sty","placeholder","onChangeText","contactInput","inputContainer","secureTextEntry","input","name","size","color","black","icon","onPress","title","btnColor","onPressedFun","errorText","create","flex","alignItems","justifyContent","backgroundColor","gap","marginBottom","fontSize","fontWeight","width","marginTop","flexDirection","borderColor","marginLeft","padding"],"sources":["D:/My Documents/Q-phela-UI/src/screens/RegisterScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Colors } from \"../assets/Colors\";\r\nimport { Text, SafeAreaView, StyleSheet, View, TextInput } from \"react-native\";\r\nimport LocationSvg from \"../assets/svg/LocationSvg\";\r\nimport RoundedButton from \"../components/global/RoundedButton\";\r\nimport axios from 'axios';\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\n\r\nconst RegisterScreen = () => {\r\n  const navigation = useNavigation();\r\n  const [citizenName, setCitizenName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [contactNumber, setContactNumber] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n  const [confirmPasswordVisible, setConfirmPasswordVisible] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const registerFun = async () => {\r\n    try {\r\n      if (password !== confirmPassword) {\r\n        setError('Passwords do not match.');\r\n        return;\r\n      }\r\n\r\n      const data = {\r\n        citizen_name: citizenName,\r\n        email,\r\n        password,\r\n        contact_number: contactNumber\r\n      };\r\n\r\n      const response = await axios.post('http://localhost:3002/register', data);\r\n\r\n      if (response.data.success) {\r\n        navigation.navigate('Login');\r\n      } else {\r\n        if (response.data.message === 'User with this email already exists') {\r\n          setError('User with this email already exists.');\r\n        } else {\r\n          setError('Registration failed. Please check your input and try again.');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setError('Registration failed. Please check your input and try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.root}>\r\n      <View style={styles.svgtext}>\r\n        <LocationSvg />\r\n        <Text style={styles.headerText}>Register your account</Text>\r\n      </View>\r\n      <View style={styles.fields}>\r\n       <View style={sty}>\r\n       <TextInput\r\n          placeholder=\"Username\"\r\n          onChangeText={setCitizenName}\r\n          \r\n        />\r\n        <TextInput\r\n          placeholder=\"Email *\"\r\n          onChangeText={setEmail}\r\n          \r\n        />\r\n       </View>\r\n        <TextInput\r\n          placeholder=\"Contact Number\"\r\n          onChangeText={setContactNumber}\r\n          style={styles.contactInput}\r\n        />\r\n        <View style={styles.inputContainer}>\r\n          <TextInput\r\n            placeholder=\"Password *\"\r\n            secureTextEntry={!passwordVisible}\r\n            onChangeText={setPassword}\r\n            style={styles.input}\r\n          />\r\n          <FontAwesome\r\n            name={passwordVisible ? \"eye\" : \"eye-slash\"}\r\n            size={24}\r\n            color={Colors.black}\r\n            style={styles.icon}\r\n            onPress={() => setPasswordVisible(!passwordVisible)}\r\n          />\r\n        </View>\r\n        <View style={styles.inputContainer}>\r\n          <TextInput\r\n            placeholder=\"Confirm Password *\"\r\n            secureTextEntry={!confirmPasswordVisible}\r\n            onChangeText={setConfirmPassword}\r\n            style={styles.input}\r\n          />\r\n          <FontAwesome\r\n            name={confirmPasswordVisible ? \"eye\" : \"eye-slash\"}\r\n            size={24}\r\n            color={Colors.black}\r\n            style={styles.icon}\r\n            onPress={() => setConfirmPasswordVisible(!confirmPasswordVisible)}\r\n          />\r\n        </View>\r\n        <RoundedButton\r\n          title=\"Register\"\r\n          btnColor={Colors.black}\r\n          onPressedFun={registerFun}\r\n        />\r\n        {error && <Text style={styles.errorText}>{error}</Text>}\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"gray\",\r\n  },\r\n  svgtext: {\r\n    gap: 31,\r\n    alignItems: \"center\",\r\n    marginBottom: 30,\r\n  },\r\n  headerText: {\r\n    fontSize: 20,\r\n    fontWeight: \"700\",\r\n  },\r\n  fields: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    gap: 20,\r\n    \r\n  },\r\n  contactInput: {\r\n    marginTop: 5,\r\n    backgroundColor:\"#d3d3d3\",\r\n  },\r\n  inputContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    borderColor: \"blue\",\r\n    marginLeft:37,\r\n    \r\n  },\r\n  input: {\r\n    flex: 1,\r\n    backgroundColor:\"#d3d3d3\",\r\n  },\r\n  icon: {\r\n    padding: 5,\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    marginTop: 10,\r\n  },\r\n});\r\n\r\nexport default RegisterScreen;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM;AAA2B,OAAAC,IAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAE1C,OAAOC,WAAW;AAClB,OAAOC,aAAa;AACpB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjD,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAC3B,IAAMC,UAAU,GAAGP,aAAa,CAAC,CAAC;EAClC,IAAAQ,SAAA,GAAsClB,QAAQ,CAAC,EAAE,CAAC;IAAAmB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAClC,IAAAI,UAAA,GAA0BvB,QAAQ,CAAC,EAAE,CAAC;IAAAwB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAAG,UAAA,GAA0C3B,QAAQ,CAAC,EAAE,CAAC;IAAA4B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAA/CE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EACtC,IAAAG,UAAA,GAAgC/B,QAAQ,CAAC,EAAE,CAAC;IAAAgC,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAA8CnC,QAAQ,CAAC,EAAE,CAAC;IAAAoC,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAAnDE,eAAe,GAAAD,WAAA;IAAEE,kBAAkB,GAAAF,WAAA;EAC1C,IAAAG,WAAA,GAA8CvC,QAAQ,CAAC,KAAK,CAAC;IAAAwC,WAAA,GAAApB,cAAA,CAAAmB,WAAA;IAAtDE,eAAe,GAAAD,WAAA;IAAEE,kBAAkB,GAAAF,WAAA;EAC1C,IAAAG,WAAA,GAA4D3C,QAAQ,CAAC,KAAK,CAAC;IAAA4C,WAAA,GAAAxB,cAAA,CAAAuB,WAAA;IAApEE,sBAAsB,GAAAD,WAAA;IAAEE,yBAAyB,GAAAF,WAAA;EACxD,IAAAG,WAAA,GAA0B/C,QAAQ,CAAC,EAAE,CAAC;IAAAgD,WAAA,GAAA5B,cAAA,CAAA2B,WAAA;IAA/BE,KAAK,GAAAD,WAAA;IAAEE,QAAQ,GAAAF,WAAA;EAEtB,IAAMG,WAAW;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC9B,IAAI;QACF,IAAIpB,QAAQ,KAAKI,eAAe,EAAE;UAChCa,QAAQ,CAAC,yBAAyB,CAAC;UACnC;QACF;QAEA,IAAMI,IAAI,GAAG;UACXC,YAAY,EAAElC,WAAW;UACzBI,KAAK,EAALA,KAAK;UACLQ,QAAQ,EAARA,QAAQ;UACRuB,cAAc,EAAE3B;QAClB,CAAC;QAED,IAAM4B,QAAQ,SAAShD,KAAK,CAACiD,IAAI,CAAC,gCAAgC,EAAEJ,IAAI,CAAC;QAEzE,IAAIG,QAAQ,CAACH,IAAI,CAACK,OAAO,EAAE;UACzB1C,UAAU,CAAC2C,QAAQ,CAAC,OAAO,CAAC;QAC9B,CAAC,MAAM;UACL,IAAIH,QAAQ,CAACH,IAAI,CAACO,OAAO,KAAK,qCAAqC,EAAE;YACnEX,QAAQ,CAAC,sCAAsC,CAAC;UAClD,CAAC,MAAM;YACLA,QAAQ,CAAC,6DAA6D,CAAC;UACzE;QACF;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACda,OAAO,CAACb,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9BC,QAAQ,CAAC,6DAA6D,CAAC;MACzE;IACF,CAAC;IAAA,gBA7BKC,WAAWA,CAAA;MAAA,OAAAC,IAAA,CAAAW,KAAA,OAAAC,SAAA;IAAA;EAAA,GA6BhB;EAED,OACEjD,KAAA,CAACZ,YAAY;IAAC8D,KAAK,EAAEC,MAAM,CAACC,IAAK;IAAAC,QAAA,GAC/BrD,KAAA,CAACV,IAAI;MAAC4D,KAAK,EAAEC,MAAM,CAACG,OAAQ;MAAAD,QAAA,GAC1BvD,IAAA,CAACN,WAAW,IAAE,CAAC,EACfM,IAAA,CAACX,IAAI;QAAC+D,KAAK,EAAEC,MAAM,CAACI,UAAW;QAAAF,QAAA,EAAC;MAAqB,CAAM,CAAC;IAAA,CACxD,CAAC,EACPrD,KAAA,CAACV,IAAI;MAAC4D,KAAK,EAAEC,MAAM,CAACK,MAAO;MAAAH,QAAA,GAC1BrD,KAAA,CAACV,IAAI;QAAC4D,KAAK,EAAEO,GAAI;QAAAJ,QAAA,GACjBvD,IAAA,CAACP,SAAS;UACPmE,WAAW,EAAC,UAAU;UACtBC,YAAY,EAAEpD;QAAe,CAE9B,CAAC,EACFT,IAAA,CAACP,SAAS;UACRmE,WAAW,EAAC,SAAS;UACrBC,YAAY,EAAEhD;QAAS,CAExB,CAAC;MAAA,CACG,CAAC,EACNb,IAAA,CAACP,SAAS;QACRmE,WAAW,EAAC,gBAAgB;QAC5BC,YAAY,EAAE5C,gBAAiB;QAC/BmC,KAAK,EAAEC,MAAM,CAACS;MAAa,CAC5B,CAAC,EACF5D,KAAA,CAACV,IAAI;QAAC4D,KAAK,EAAEC,MAAM,CAACU,cAAe;QAAAR,QAAA,GACjCvD,IAAA,CAACP,SAAS;UACRmE,WAAW,EAAC,YAAY;UACxBI,eAAe,EAAE,CAACpC,eAAgB;UAClCiC,YAAY,EAAExC,WAAY;UAC1B+B,KAAK,EAAEC,MAAM,CAACY;QAAM,CACrB,CAAC,EACFjE,IAAA,CAACF,WAAW;UACVoE,IAAI,EAAEtC,eAAe,GAAG,KAAK,GAAG,WAAY;UAC5CuC,IAAI,EAAE,EAAG;UACTC,KAAK,EAAEhF,MAAM,CAACiF,KAAM;UACpBjB,KAAK,EAAEC,MAAM,CAACiB,IAAK;UACnBC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAM1C,kBAAkB,CAAC,CAACD,eAAe,CAAC;UAAA;QAAC,CACrD,CAAC;MAAA,CACE,CAAC,EACP1B,KAAA,CAACV,IAAI;QAAC4D,KAAK,EAAEC,MAAM,CAACU,cAAe;QAAAR,QAAA,GACjCvD,IAAA,CAACP,SAAS;UACRmE,WAAW,EAAC,oBAAoB;UAChCI,eAAe,EAAE,CAAChC,sBAAuB;UACzC6B,YAAY,EAAEpC,kBAAmB;UACjC2B,KAAK,EAAEC,MAAM,CAACY;QAAM,CACrB,CAAC,EACFjE,IAAA,CAACF,WAAW;UACVoE,IAAI,EAAElC,sBAAsB,GAAG,KAAK,GAAG,WAAY;UACnDmC,IAAI,EAAE,EAAG;UACTC,KAAK,EAAEhF,MAAM,CAACiF,KAAM;UACpBjB,KAAK,EAAEC,MAAM,CAACiB,IAAK;UACnBC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMtC,yBAAyB,CAAC,CAACD,sBAAsB,CAAC;UAAA;QAAC,CACnE,CAAC;MAAA,CACE,CAAC,EACPhC,IAAA,CAACL,aAAa;QACZ6E,KAAK,EAAC,UAAU;QAChBC,QAAQ,EAAErF,MAAM,CAACiF,KAAM;QACvBK,YAAY,EAAEpC;MAAY,CAC3B,CAAC,EACDF,KAAK,IAAIpC,IAAA,CAACX,IAAI;QAAC+D,KAAK,EAAEC,MAAM,CAACsB,SAAU;QAAApB,QAAA,EAAEnB;MAAK,CAAO,CAAC;IAAA,CACnD,CAAC;EAAA,CACK,CAAC;AAEnB,CAAC;AAED,IAAMiB,MAAM,GAAG9D,UAAU,CAACqF,MAAM,CAAC;EAC/BtB,IAAI,EAAE;IACJuB,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,eAAe,EAAE;EACnB,CAAC;EACDxB,OAAO,EAAE;IACPyB,GAAG,EAAE,EAAE;IACPH,UAAU,EAAE,QAAQ;IACpBI,YAAY,EAAE;EAChB,CAAC;EACDzB,UAAU,EAAE;IACV0B,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACD1B,MAAM,EAAE;IACNqB,cAAc,EAAE,QAAQ;IACxBD,UAAU,EAAE,QAAQ;IACpBO,KAAK,EAAE,MAAM;IACbJ,GAAG,EAAE;EAEP,CAAC;EACDnB,YAAY,EAAE;IACZwB,SAAS,EAAE,CAAC;IACZN,eAAe,EAAC;EAClB,CAAC;EACDjB,cAAc,EAAE;IACdwB,aAAa,EAAE,KAAK;IACpBT,UAAU,EAAE,QAAQ;IACpBU,WAAW,EAAE,MAAM;IACnBC,UAAU,EAAC;EAEb,CAAC;EACDxB,KAAK,EAAE;IACLY,IAAI,EAAE,CAAC;IACPG,eAAe,EAAC;EAClB,CAAC;EACDV,IAAI,EAAE;IACJoB,OAAO,EAAE;EACX,CAAC;EACDf,SAAS,EAAE;IACTP,KAAK,EAAE,KAAK;IACZkB,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAenF,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}