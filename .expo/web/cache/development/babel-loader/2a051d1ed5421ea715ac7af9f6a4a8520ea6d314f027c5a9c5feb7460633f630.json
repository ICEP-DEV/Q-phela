{"ast":null,"code":"import React, { useState } from 'react';\nimport Heading from \"../components/landing-screen/Heading\";\nimport axios from 'axios';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar IncidentReportForm = function IncidentReportForm() {\n  return _jsxs(\"div\", {\n    className: \"container\",\n    children: [_jsx(\"style\", {\n      children: `\n          /* ... Other styles ... */\n\n          .radio-container {\n            display: flex;\n            flex-direction: row; /* Change to \"row\" for horizontal alignment */\n          }\n\n          .radio-label {\n            display: flex;\n            align-items: center;\n            margin-right: 20px; /* Add margin-right for spacing between radio options */\n          }\n\n          /* ... Other styles ... */\n        `\n    }), _jsx(Heading, {}), _jsxs(\"div\", {\n      className: \"container\",\n      children: [_jsx(\"h2\", {\n        children: \"Incident Reporting\"\n      }), _jsxs(\"form\", {\n        onSubmit: handleSubmit,\n        children: [_jsxs(\"div\", {\n          className: \"form-group\",\n          children: [_jsx(\"label\", {\n            children: \"Enter Location:\"\n          }), _jsx(\"input\", {\n            type: \"text\",\n            name: \"location\",\n            placeholder: \"Enter your location\",\n            value: incident.location,\n            onChange: handleChange,\n            className: \"enter-location\"\n          })]\n        }), _jsxs(\"div\", {\n          className: \"form-group\",\n          children: [_jsx(\"label\", {\n            children: \"Incident Type:\"\n          }), _jsx(\"div\", {\n            className: \"radio-container\",\n            children: incidentTypes.map(function (type) {\n              return _jsxs(\"label\", {\n                className: \"radio-label\",\n                children: [_jsx(\"input\", {\n                  type: \"radio\",\n                  name: \"incidentType\",\n                  value: type.value,\n                  onChange: handleChange,\n                  checked: incident.incidentType === type.value,\n                  className: \"radio-input\"\n                }), type.label]\n              }, type.value);\n            })\n          })]\n        }), incident.incidentType === 'Other' && _jsxs(\"div\", {\n          className: \"form-group\",\n          children: [_jsx(\"label\", {\n            children: \"Custom Incident Type:\"\n          }), _jsx(\"input\", {\n            type: \"text\",\n            name: \"customIncidentType\",\n            placeholder: \"Enter custom incident type\",\n            value: incident.customIncidentType,\n            onChange: handleChange,\n            className: \"custom-incident-input\"\n          })]\n        }), _jsxs(\"div\", {\n          className: \"form-group\",\n          children: [_jsx(\"label\", {\n            className: \"incident-description-label\",\n            children: \"Incident Description:\"\n          }), _jsx(\"textarea\", {\n            name: \"description\",\n            mode: \"text\",\n            secure: true,\n            placeholder: \"Type your description\",\n            value: incident.description,\n            onChange: handleChange,\n            onChangeText: function onChangeText(e) {\n              return setDescription(e);\n            },\n            className: \"incident-description\"\n          })]\n        }), _jsx(\"div\", {\n          className: \"btn-container\",\n          children: _jsx(\"button\", {\n            type: \"submit\",\n            className: \"btn\",\n            onPressedFun: handleSubmit,\n            children: \"Submit\"\n          })\n        })]\n      })]\n    })]\n  });\n};\nexport default IncidentReportForm;","map":{"version":3,"names":["React","useState","Heading","axios","useNavigation","jsx","_jsx","jsxs","_jsxs","IncidentReportForm","className","children","onSubmit","handleSubmit","type","name","placeholder","value","incident","location","onChange","handleChange","incidentTypes","map","checked","incidentType","label","customIncidentType","mode","secure","description","onChangeText","e","setDescription","onPressedFun"],"sources":["C:/Users/Student/Desktop/Q-phela-UI/src/screens/IncidentReportForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Heading from \"../components/landing-screen/Heading\";\r\nimport axios from 'axios';\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\n// ... Other code ...\r\n\r\nconst IncidentReportForm = () => {\r\n  // ... Previous code ...\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <style>\r\n        {`\r\n          /* ... Other styles ... */\r\n\r\n          .radio-container {\r\n            display: flex;\r\n            flex-direction: row; /* Change to \"row\" for horizontal alignment */\r\n          }\r\n\r\n          .radio-label {\r\n            display: flex;\r\n            align-items: center;\r\n            margin-right: 20px; /* Add margin-right for spacing between radio options */\r\n          }\r\n\r\n          /* ... Other styles ... */\r\n        `}\r\n      </style>\r\n      <Heading />\r\n      <div className=\"container\">\r\n        <h2>Incident Reporting</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Enter Location:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"location\"\r\n              placeholder=\"Enter your location\"\r\n              value={incident.location}\r\n              onChange={handleChange}\r\n              className=\"enter-location\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Incident Type:</label>\r\n            <div className=\"radio-container\">\r\n              {incidentTypes.map((type) => (\r\n                <label key={type.value} className=\"radio-label\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"incidentType\"\r\n                    value={type.value}\r\n                    onChange={handleChange}\r\n                    checked={incident.incidentType === type.value}\r\n                    className=\"radio-input\"\r\n                  />\r\n                  {type.label}\r\n                </label>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          {incident.incidentType === 'Other' && \r\n            <div className=\"form-group\">\r\n              <label>Custom Incident Type:</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"customIncidentType\"\r\n                placeholder=\"Enter custom incident type\"\r\n                value={incident.customIncidentType}\r\n                onChange={handleChange}\r\n                className=\"custom-incident-input\"\r\n              />\r\n            </div>\r\n          }\r\n\r\n          <div className=\"form-group\">\r\n            <label className=\"incident-description-label\">Incident Description:</label>\r\n            <textarea\r\n              name=\"description\"\r\n              mode=\"text\"\r\n              secure={true}\r\n              placeholder=\"Type your description\"\r\n              value={incident.description}\r\n              onChange={handleChange}\r\n              onChangeText={(e) => setDescription(e)}\r\n              className=\"incident-description\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"btn-container\">\r\n            <button type=\"submit\" className=\"btn\" onPressedFun={handleSubmit}>\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncidentReportForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}