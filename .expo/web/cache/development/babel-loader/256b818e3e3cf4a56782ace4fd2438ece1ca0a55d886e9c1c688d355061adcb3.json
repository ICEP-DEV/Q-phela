{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport * as Speech from 'expo-speech';\nimport HomeScreen from \"./HomeScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Chatbot = function Chatbot() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    inputText = _useState4[0],\n    setInputText = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(true),\n    _useState8 = _slicedToArray(_useState7, 2),\n    voiceEnabled = _useState8[0],\n    setVoiceEnabled = _useState8[1];\n  useEffect(function () {\n    setMessages([{\n      id: 1,\n      text: _jsx(Text, {\n        style: {\n          fontWeight: 'bold',\n          fontSize: 15,\n          justifyContent: 'center'\n        },\n        children: \"ASK AND GET HELP\"\n      })\n    }]);\n  }, []);\n  var handleUserInput = function handleUserInput() {\n    var userInput = inputText.toLowerCase();\n    setLoading(true);\n    setTimeout(function () {\n      var response;\n      if (userInput.includes('busy')) {\n        response = \"When in a busy area, stay alert and be aware of your surroundings. Avoid displaying valuable items.\";\n      } else if (userInput.includes('gbv')) {\n        response = \"Report Gender-Based Violence by contacting local law enforcement, seeking medical attention, and reaching out to support organizations or hotlines.\";\n      } else if (userInput.includes('hi')) {\n        response = \"HI hello   Welcome to Qphela  Chat bot. How can I help you?\";\n      } else if (userInput.includes('overcrowded')) {\n        response = \"In overcrowded areas, keep your belongings secure and avoid crowded places if possible.\";\n      } else if (userInput.includes('quiet')) {\n        response = \"In quiet areas, be cautious and avoid isolated spots. Let someone know your whereabouts.\";\n      } else if (userInput.includes('public transport')) {\n        response = \"When using public transport, be aware of your surroundings, travel in well-lit areas, and keep your belongings secure.\";\n      } else if (userInput.includes('night')) {\n        response = \"At night, stay in well-lit areas, use trusted transportation, and be cautious of your surroundings.\";\n      } else if (userInput.includes('stranger')) {\n        response = \"Avoid sharing personal information with strangers and be cautious when approached by unfamiliar individuals.\";\n      } else if (userInput.includes('emergency')) {\n        response = \"Save emergency contacts on your phone, and know the emergency hotline number in your area for quick response.\";\n      } else if (userInput.includes('self-defense')) {\n        response = \"Consider taking self-defense classes to empower yourself and enhance your personal safety.\";\n      } else if (userInput.includes('online')) {\n        response = \"When online, be cautious about sharing personal information and report any suspicious activity to the platform.\";\n      } else if (userInput.includes('traffic rules')) {\n        response = \"Follow traffic rules and use designated crosswalks to ensure your safety when crossing roads.\";\n      } else if (userInput.includes('atm')) {\n        response = \"When using ATMs, be cautious of your surroundings, shield your PIN, and avoid displaying large sums of money.\";\n      } else if (userInput.includes('parking')) {\n        response = \"Park in well-lit areas, lock your car, and avoid leaving valuables visible to reduce the risk of theft.\";\n      } else if (userInput.includes('cybersecurity')) {\n        response = \"Practice good cybersecurity habits, such as using strong passwords and being cautious of phishing attempts, to protect your online presence.\";\n      } else if (userInput.includes('traveling alone')) {\n        response = \"When traveling alone, inform someone of your itinerary, stay in reputable accommodations, and be cautious in unfamiliar areas.\";\n      } else if (userInput.includes('social gatherings')) {\n        response = \"In social gatherings, be mindful of your drink, stay with trusted friends, and have a plan for getting home safely.\";\n      } else if (userInput.includes('children safety')) {\n        response = \"Ensure children's safety by teaching them about stranger danger, setting boundaries, and monitoring their online activities.\";\n      } else if (userInput.includes('workplace safety')) {\n        response = \"Promote workplace safety by reporting any unsafe conditions, participating in safety training, and being aware of emergency exits.\";\n      } else if (userInput.includes('traumatized')) {\n        response = \"Prioritize mental health by seeking support when needed, practicing self-care, and promoting a healthy work-life balance.\";\n      } else if (userInput.includes('home security')) {\n        response = \"Enhance home security by installing reliable locks, securing windows, and being cautious of who you allow into your home.\";\n      } else if (userInput.includes('environmental awareness')) {\n        response = \"Practice environmental awareness by disposing of waste responsibly and being mindful of your impact on the surroundings.\";\n      } else if (userInput.includes('avoiding theft')) {\n        response = \"To avoid theft, keep your belongings secure, be aware of your surroundings, and use anti-theft measures such as locking your bags.\";\n      } else if (userInput.includes('gun violence')) {\n        response = \"To stay safe from gun violence, avoid confrontations, report suspicious activity to the authorities, and follow safety guidelines in your area.\";\n      } else if (userInput.includes('sexual assault')) {\n        response = \"To prevent sexual assault, trust your instincts, be cautious in unfamiliar environments, and seek help if you feel unsafe.\";\n      } else if (userInput.includes('carjacking')) {\n        response = \"To reduce the risk of carjacking, be aware of your surroundings, keep your car doors locked, and avoid stopping in isolated or poorly lit areas.\";\n      } else {\n        response = \"I'm sorry, I didn't understand. Please select a keyword: busy, GBV, overcrowded, quiet, public transport, night, stranger, emergency, self-defense, online, traffic rules, ATM, parking, cybersecurity, traveling alone, social gatherings, children safety, workplace safety, mental health, home security, or environmental awareness.\";\n        showSuggestionMenu();\n      }\n      setMessages(function (prevMessages) {\n        return [].concat(_toConsumableArray(prevMessages), [{\n          id: prevMessages.length + 1,\n          text: userInput\n        }, {\n          id: prevMessages.length + 2,\n          text: response\n        }]);\n      });\n      if (voiceEnabled) {\n        Speech.speak(response, {\n          language: 'en'\n        });\n      }\n      fetch('http://localhost:3000/messages', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_input: userInput,\n          bot_response: response\n        })\n      }).then(function (response) {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      }).then(function (data) {\n        console.log('Message sent to the server:', data);\n      }).catch(function (error) {\n        console.error('Error sending message to the server:', error);\n        Alert.alert('Error', 'Failed to send message to the server. Please try again.');\n      }).finally(function () {\n        setLoading(false);\n        setInputText('');\n      });\n    }, 1000);\n  };\n  var showSuggestionMenu = function showSuggestionMenu() {\n    Alert.alert(\"Select a Keyword\", \"Choose a keyword related to your safety concern:\", [{\n      text: \"Busy\",\n      onPress: function onPress() {\n        return setInputText(\"busy\");\n      }\n    }, {\n      text: \"GBV\",\n      onPress: function onPress() {\n        return setInputText(\"GBV\");\n      }\n    }, {\n      text: \"Overcrowded\",\n      onPress: function onPress() {\n        return setInputText(\"overcrowded\");\n      }\n    }], {\n      cancelable: true\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#cae7d3'\n    },\n    children: [_jsx(FlatList, {\n      data: messages,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(View, {\n          style: {\n            padding: 10,\n            backgroundColor: item.id % 2 === 0 ? '#ADD8E6' : '#cae7d3'\n          },\n          children: _jsx(Text, {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: item.text\n          })\n        });\n      }\n    }), loading ? _jsx(ActivityIndicator, {\n      style: {\n        margin: 10\n      },\n      size: \"large\",\n      color: \"#4CAF50\"\n    }) : _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        padding: 10\n      },\n      children: [_jsx(TextInput, {\n        style: {\n          flex: 1,\n          height: 40,\n          borderColor: '#808080',\n          borderWidth: 1,\n          marginRight: 10,\n          padding: 5,\n          marginBottom: 20\n        },\n        placeholder: \"Type your message...\",\n        value: inputText,\n        onChangeText: function onChangeText(text) {\n          return setInputText(text);\n        }\n      }), _jsx(Switch, {\n        value: voiceEnabled,\n        onValueChange: function onValueChange(value) {\n          return setVoiceEnabled(value);\n        },\n        style: {\n          marginRight: 10,\n          marginBottom: 20\n        }\n      }), _jsx(TouchableOpacity, {\n        style: {\n          padding: 10,\n          backgroundColor: '#000000',\n          borderRadius: 5,\n          marginBottom: 20\n        },\n        onPress: handleUserInput,\n        children: _jsx(Text, {\n          style: {\n            color: 'white'\n          },\n          children: \"Send\"\n        })\n      })]\n    }), _jsx(View, {\n      children: _jsx(HomeScreen, {\n        style: Styles\n      })\n    })]\n  });\n};\nexport default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","FlatList","Alert","ActivityIndicator","Switch","Speech","HomeScreen","jsx","_jsx","jsxs","_jsxs","Chatbot","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","inputText","setInputText","_useState5","_useState6","loading","setLoading","_useState7","_useState8","voiceEnabled","setVoiceEnabled","id","text","style","fontWeight","fontSize","justifyContent","children","handleUserInput","userInput","toLowerCase","setTimeout","response","includes","showSuggestionMenu","prevMessages","concat","_toConsumableArray","length","speak","language","fetch","method","headers","body","JSON","stringify","user_input","bot_response","then","ok","Error","json","data","console","log","catch","error","alert","finally","onPress","cancelable","flex","backgroundColor","keyExtractor","item","toString","renderItem","_ref","padding","margin","size","color","flexDirection","alignItems","height","borderColor","borderWidth","marginRight","marginBottom","placeholder","value","onChangeText","onValueChange","borderRadius","Styles"],"sources":["C:/Q-phela-UI/src/screens/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, FlatList, Alert, ActivityIndicator, Switch } from 'react-native';\r\nimport * as Speech from 'expo-speech';\r\nimport HomeScreen from './HomeScreen';\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputText, setInputText] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [voiceEnabled, setVoiceEnabled] = useState(true);\r\n  useEffect(() => {\r\n    // Initial welcome message\r\n    setMessages([{ id: 1, text: <Text style={{ fontWeight: 'bold', fontSize:15, justifyContent:'center'}}>ASK AND GET HELP</Text> }]);\r\n  }, []);\r\n  const handleUserInput = () => {\r\n    // Process user input and generate bot response\r\n    const userInput = inputText.toLowerCase(); // Convert input to lowercase\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n        let response;\r\n        if (userInput.includes('busy')) {\r\n          response = \"When in a busy area, stay alert and be aware of your surroundings. Avoid displaying valuable items.\";\r\n        } else if (userInput.includes('gbv')) {\r\n          response = \"Report Gender-Based Violence by contacting local law enforcement, seeking medical attention, and reaching out to support organizations or hotlines.\";\r\n        } else if (userInput.includes('hi')) {\r\n          response = \"HI hello   Welcome to Qphela  Chat bot. How can I help you?\";\r\n        } else if (userInput.includes('overcrowded')) {\r\n          response = \"In overcrowded areas, keep your belongings secure and avoid crowded places if possible.\";\r\n        } else if (userInput.includes('quiet')) {\r\n          response = \"In quiet areas, be cautious and avoid isolated spots. Let someone know your whereabouts.\";\r\n        } else if (userInput.includes('public transport')) {\r\n          response = \"When using public transport, be aware of your surroundings, travel in well-lit areas, and keep your belongings secure.\";\r\n        } else if (userInput.includes('night')) {\r\n          response = \"At night, stay in well-lit areas, use trusted transportation, and be cautious of your surroundings.\";\r\n        } else if (userInput.includes('stranger')) {\r\n          response = \"Avoid sharing personal information with strangers and be cautious when approached by unfamiliar individuals.\";\r\n        } else if (userInput.includes('emergency')) {\r\n          response = \"Save emergency contacts on your phone, and know the emergency hotline number in your area for quick response.\";\r\n        } else if (userInput.includes('self-defense')) {\r\n          response = \"Consider taking self-defense classes to empower yourself and enhance your personal safety.\";\r\n        } else if (userInput.includes('online')) {\r\n          response = \"When online, be cautious about sharing personal information and report any suspicious activity to the platform.\";\r\n        } else if (userInput.includes('traffic rules')) {\r\n          response = \"Follow traffic rules and use designated crosswalks to ensure your safety when crossing roads.\";\r\n        } else if (userInput.includes('atm')) {\r\n          response = \"When using ATMs, be cautious of your surroundings, shield your PIN, and avoid displaying large sums of money.\";\r\n        } else if (userInput.includes('parking')) {\r\n          response = \"Park in well-lit areas, lock your car, and avoid leaving valuables visible to reduce the risk of theft.\";\r\n        } else if (userInput.includes('cybersecurity')) {\r\n          response = \"Practice good cybersecurity habits, such as using strong passwords and being cautious of phishing attempts, to protect your online presence.\";\r\n        } else if (userInput.includes('traveling alone')) {\r\n          response = \"When traveling alone, inform someone of your itinerary, stay in reputable accommodations, and be cautious in unfamiliar areas.\";\r\n        } else if (userInput.includes('social gatherings')) {\r\n          response = \"In social gatherings, be mindful of your drink, stay with trusted friends, and have a plan for getting home safely.\";\r\n        } else if (userInput.includes('children safety')) {\r\n          response = \"Ensure children's safety by teaching them about stranger danger, setting boundaries, and monitoring their online activities.\";\r\n        } else if (userInput.includes('workplace safety')) {\r\n          response = \"Promote workplace safety by reporting any unsafe conditions, participating in safety training, and being aware of emergency exits.\";\r\n        } else if (userInput.includes('traumatized')) {\r\n          response = \"Prioritize mental health by seeking support when needed, practicing self-care, and promoting a healthy work-life balance.\";\r\n        } else if (userInput.includes('home security')) {\r\n          response = \"Enhance home security by installing reliable locks, securing windows, and being cautious of who you allow into your home.\";\r\n        } else if (userInput.includes('environmental awareness')) {\r\n          response = \"Practice environmental awareness by disposing of waste responsibly and being mindful of your impact on the surroundings.\";\r\n        } else if (userInput.includes('avoiding theft')) {\r\n          response = \"To avoid theft, keep your belongings secure, be aware of your surroundings, and use anti-theft measures such as locking your bags.\";\r\n        } else if (userInput.includes('gun violence')) {\r\n          response = \"To stay safe from gun violence, avoid confrontations, report suspicious activity to the authorities, and follow safety guidelines in your area.\";\r\n        } else if (userInput.includes('sexual assault')) {\r\n          response = \"To prevent sexual assault, trust your instincts, be cautious in unfamiliar environments, and seek help if you feel unsafe.\";\r\n        } else if (userInput.includes('carjacking')) {\r\n          response = \"To reduce the risk of carjacking, be aware of your surroundings, keep your car doors locked, and avoid stopping in isolated or poorly lit areas.\";\r\n        } else {\r\n          response = \"I'm sorry, I didn't understand. Please select a keyword: busy, GBV, overcrowded, quiet, public transport, night, stranger, emergency, self-defense, online, traffic rules, ATM, parking, cybersecurity, traveling alone, social gatherings, children safety, workplace safety, mental health, home security, or environmental awareness.\";\r\n          showSuggestionMenu();\r\n        }\r\n      // Update chat history\r\n      setMessages((prevMessages) => [\r\n        ...prevMessages,\r\n        { id: prevMessages.length + 1, text: userInput },\r\n        { id: prevMessages.length + 2, text: response },\r\n      ]);\r\n      // Speak the response if voice is enabled\r\n      if (voiceEnabled) {\r\n        Speech.speak(response, { language: 'en' });\r\n      }\r\n      // Send the new message to the server\r\n      fetch('http://localhost:3000/messages', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          user_input: userInput,\r\n          bot_response: response,\r\n        }),\r\n      })\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          console.log('Message sent to the server:', data);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error sending message to the server:', error);\r\n          Alert.alert('Error', 'Failed to send message to the server. Please try again.');\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n          // Clear the input text after sending the message\r\n          setInputText('');\r\n        });\r\n    }, 1000); // Simulating a delay for the bot to process the input\r\n  };\r\n  const showSuggestionMenu = () => {\r\n    Alert.alert(\r\n      \"Select a Keyword\",\r\n      \"Choose a keyword related to your safety concern:\",\r\n      [\r\n        { text: \"Busy\", onPress: () => setInputText(\"busy\") },\r\n        { text: \"GBV\", onPress: () => setInputText(\"GBV\") },\r\n        { text: \"Overcrowded\", onPress: () => setInputText(\"overcrowded\") },\r\n        // Add more suggestions based on your needs\r\n      ],\r\n      { cancelable: true }\r\n    );\r\n  };\r\n  return (\r\n    <View style={{ flex: 1 ,backgroundColor:'#cae7d3'}}> \r\n      <FlatList\r\n        data={messages}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        renderItem={({ item }) => (\r\n          <View style={{ padding: 10, backgroundColor: item.id % 2 === 0 ? '#ADD8E6' : '#cae7d3' }}>\r\n             <Text style={{ fontWeight: 'bold' }}>{item.text}</Text>\r\n            \r\n          </View>\r\n        )}\r\n      />\r\n      {loading ? (\r\n        <ActivityIndicator style={{ margin: 10 }} size=\"large\" color=\"#4CAF50\"  />       ) : (\r\n        <View style={{ flexDirection: 'row', alignItems: 'center', padding: 10 }}>\r\n          <TextInput\r\n            style={{ flex: 1, height: 40, borderColor: '#808080', borderWidth: 1, marginRight: 10, padding: 5,marginBottom:20}}\r\n            placeholder=\"Type your message...\"\r\n            value={inputText}\r\n            onChangeText={(text) => setInputText(text)}/>\r\n          <Switch\r\n            value={voiceEnabled}\r\n            onValueChange={(value) => setVoiceEnabled(value)}\r\n            style={{ marginRight: 10,marginBottom:20}}\r\n          />\r\n          <TouchableOpacity style={{ padding: 10, backgroundColor: '#000000', borderRadius: 5,marginBottom:20}} onPress={handleUserInput}>\r\n            <Text style={{ color: 'white' }}>Send</Text>\r\n          </TouchableOpacity>\r\n          \r\n        </View>\r\n      )}\r\n      <View>\r\n      <HomeScreen style={Styles}/>\r\n      </View>\r\n    </View>\r\n    \r\n  );\r\n};\r\nexport default Chatbot;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}