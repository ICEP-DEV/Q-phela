{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useState } from 'react';\nimport Heading from \"../components/landing-screen/Heading\";\nimport axios from 'axios';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar IncidentReportForm = function IncidentReportForm() {\n  var handleSubmit = function () {\n    var _ref = _asyncToGenerator(function* (e) {\n      e.preventDefault();\n      var _incident = incident,\n        location = _incident.location,\n        incidentType = _incident.incidentType,\n        description = _incident.description,\n        customIncidentType = _incident.customIncidentType;\n      var citizen_id = localStorage.getItem(\"citizen_id\");\n      var location_id = localStorage.getItem(\"location_id\");\n      var report = {\n        incident_type: incidentType === 'Other' ? customIncidentType : incidentType,\n        rep_description: description,\n        name: location,\n        citizen_id: Number(citizen_id)\n      };\n      try {\n        var response = yield axios.post('http://localhost:3007/reports', report);\n        if (response.status === 201) {\n          console.log('Report created successfully');\n          setIncident({\n            location: '',\n            incidentType: '',\n            description: '',\n            customIncidentType: ''\n          });\n        }\n      } catch (error) {\n        console.error('Error creating report:', error);\n      }\n    });\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(\"div\", {\n    className: \"container\",\n    children: [_jsx(\"style\", {\n      children: `\n          /* ... Other styles ... */\n        `\n    }), _jsx(Heading, {}), _jsxs(\"div\", {\n      className: \"container\",\n      children: [_jsx(\"h2\", {\n        children: \"Incident Reporting\"\n      }), _jsx(\"form\", {\n        onSubmit: handleSubmit\n      })]\n    })]\n  });\n};\nexport default IncidentReportForm;","map":{"version":3,"names":["React","useState","Heading","axios","useNavigation","jsx","_jsx","jsxs","_jsxs","IncidentReportForm","handleSubmit","_ref","_asyncToGenerator","e","preventDefault","_incident","incident","location","incidentType","description","customIncidentType","citizen_id","localStorage","getItem","location_id","report","incident_type","rep_description","name","Number","response","post","status","console","log","setIncident","error","_x","apply","arguments","className","children","onSubmit"],"sources":["C:/Users/Student/Desktop/Q-phela-UI/src/screens/IncidentReportForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Heading from \"../components/landing-screen/Heading\";\r\nimport axios from 'axios';\r\nimport { useNavigation } from \"@react-navigation/native\";\r\n\r\n// ... Other code ...\r\n\r\nconst IncidentReportForm = () => {\r\n  // ... Previous code ...\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { location, incidentType, description, customIncidentType } = incident;\r\n    const citizen_id = localStorage.getItem(\"citizen_id\");\r\n    const location_id = localStorage.getItem(\"location_id\");\r\n\r\n    const report = {\r\n      incident_type: incidentType === 'Other' ? customIncidentType : incidentType,\r\n      rep_description: description,\r\n      name: location, // Assuming 'name' corresponds to the location in your backend\r\n      citizen_id: Number(citizen_id),\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:3007/reports', report);\r\n\r\n      if (response.status === 201) {\r\n        console.log('Report created successfully');\r\n        setIncident({\r\n          location: '',\r\n          incidentType: '',\r\n          description: '',\r\n          customIncidentType: '',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating report:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <style>\r\n        {`\r\n          /* ... Other styles ... */\r\n        `}\r\n      </style>\r\n      <Heading />\r\n      <div className=\"container\">\r\n        <h2>Incident Reporting</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          {/* ... Rest of the form ... */}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncidentReportForm;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO;AACd,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAIzD,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;EAG/B,IAAMC,YAAY;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,CAAC,EAAK;MAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;MAElB,IAAAC,SAAA,GAAoEC,QAAQ;QAApEC,QAAQ,GAAAF,SAAA,CAARE,QAAQ;QAAEC,YAAY,GAAAH,SAAA,CAAZG,YAAY;QAAEC,WAAW,GAAAJ,SAAA,CAAXI,WAAW;QAAEC,kBAAkB,GAAAL,SAAA,CAAlBK,kBAAkB;MAC/D,IAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;MACrD,IAAMC,WAAW,GAAGF,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MAEvD,IAAME,MAAM,GAAG;QACbC,aAAa,EAAER,YAAY,KAAK,OAAO,GAAGE,kBAAkB,GAAGF,YAAY;QAC3ES,eAAe,EAAER,WAAW;QAC5BS,IAAI,EAAEX,QAAQ;QACdI,UAAU,EAAEQ,MAAM,CAACR,UAAU;MAC/B,CAAC;MAED,IAAI;QACF,IAAMS,QAAQ,SAAS3B,KAAK,CAAC4B,IAAI,CAAC,+BAA+B,EAAEN,MAAM,CAAC;QAE1E,IAAIK,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;UAC3BC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;UAC1CC,WAAW,CAAC;YACVlB,QAAQ,EAAE,EAAE;YACZC,YAAY,EAAE,EAAE;YAChBC,WAAW,EAAE,EAAE;YACfC,kBAAkB,EAAE;UACtB,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,OAAOgB,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAAA,gBA7BK1B,YAAYA,CAAA2B,EAAA;MAAA,OAAA1B,IAAA,CAAA2B,KAAA,OAAAC,SAAA;IAAA;EAAA,GA6BjB;EAED,OACE/B,KAAA;IAAKgC,SAAS,EAAC,WAAW;IAAAC,QAAA,GACxBnC,IAAA;MAAAmC,QAAA,EACI;AACV;AACA;IAAS,CACI,CAAC,EACRnC,IAAA,CAACJ,OAAO,IAAE,CAAC,EACXM,KAAA;MAAKgC,SAAS,EAAC,WAAW;MAAAC,QAAA,GACxBnC,IAAA;QAAAmC,QAAA,EAAI;MAAkB,CAAI,CAAC,EAC3BnC,IAAA;QAAMoC,QAAQ,EAAEhC;MAAa,CAEvB,CAAC;IAAA,CACJ,CAAC;EAAA,CACH,CAAC;AAEV,CAAC;AAED,eAAeD,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}