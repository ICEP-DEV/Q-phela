{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport * as Speech from 'expo-speech';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Chatbot = function Chatbot() {\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#ADD8E6'\n    },\n    children: [\" \", _jsx(FlatList, {\n      data: messages,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(View, {\n          style: {\n            padding: 10,\n            backgroundColor: item.id % 2 === 0 ? '#F0F0F0' : '#FFFFFF'\n          },\n          children: _jsx(Text, {\n            children: item.text\n          })\n        });\n      }\n    })]\n  });\n};\nexport default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","FlatList","Alert","ActivityIndicator","Switch","Speech","jsx","_jsx","jsxs","_jsxs","Chatbot","style","flex","backgroundColor","children","data","messages","keyExtractor","item","id","toString","renderItem","_ref","padding","text"],"sources":["C:/Q-phela-UI/src/screens/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, FlatList, Alert, ActivityIndicator, Switch } from 'react-native';\r\nimport * as Speech from 'expo-speech';\r\n\r\nconst Chatbot = () => {\r\n  // ... (existing code)\r\n\r\n  return (\r\n    <View style={{ flex: 1, backgroundColor: '#ADD8E6' }}> {/* Set background color here */}\r\n      <FlatList\r\n        data={messages}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        renderItem={({ item }) => (\r\n          <View style={{ padding: 10, backgroundColor: item.id % 2 === 0 ? '#F0F0F0' : '#FFFFFF' }}>\r\n            <Text>{item.text}</Text>\r\n          </View>\r\n        )}\r\n      />\r\n      {/* ... (existing code) */}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,MAAA;AAEnD,OAAO,KAAKC,MAAM,MAAM,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtC,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EAGpB,OACED,KAAA,CAACZ,IAAI;IAACc,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,eAAe,EAAE;IAAU,CAAE;IAAAC,QAAA,GAAC,GAAC,EACrDP,IAAA,CAACN,QAAQ;MACPc,IAAI,EAAEC,QAAS;MACfC,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKA,IAAI,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC;MAAA,CAAC;MAC3CC,UAAU,EAAE,SAAAA,WAAAC,IAAA;QAAA,IAAGJ,IAAI,GAAAI,IAAA,CAAJJ,IAAI;QAAA,OACjBX,IAAA,CAACV,IAAI;UAACc,KAAK,EAAE;YAAEY,OAAO,EAAE,EAAE;YAAEV,eAAe,EAAEK,IAAI,CAACC,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG;UAAU,CAAE;UAAAL,QAAA,EACvFP,IAAA,CAACT,IAAI;YAAAgB,QAAA,EAAEI,IAAI,CAACM;UAAI,CAAO;QAAC,CACpB,CAAC;MAAA;IACP,CACH,CAAC;EAAA,CAEE,CAAC;AAEX,CAAC;AAED,eAAed,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}